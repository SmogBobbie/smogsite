{"version":3,"sources":["pages/Work.js","components/Contact.js","pages/Info.js","pages/Feed.js","client.js","components/Project.js","components/Copyright.js","pages/Home.js","components/Logo.js","components/Nav.js","App.js","serviceWorker.js","index.js","images/SMOG_LOOP_16-9.mp4","images/smog-logo-cropped.png","logo.svg"],"names":["projects","fields","content","items","client","createClient","space","accessToken","Project","props","this","project","urlParts","vimeoUrl","split","vimeoId","length","className","title","class","src","width","height","frameborder","allow","allowfullscreen","credits","map","credit","key","sys","id","roll","firstName","lastName","Component","Work","state","currentProject","prevProject","bind","nextProject","undefined","getEntries","content_type","then","entries","sort","a","b","order","setState","newProject","Math","max","min","mobile","proj","i","Copyright","Contact","console","log","item","type","href","url","display","Info","getEntry","entry","e","value","Feed","res","image","file","contentType","controls","loading","Home","autoPlay","playsInline","muted","loop","defaultMuted","preload","videoSrc","Logo","logoClass","fill","to","style","backgroundImage","logoSrc","LOGO_COLORS","Nav","path","location","pathname","logoColor","includes","name","page","withRouter","App","basename","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.0db0e0b4.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport client from \"../client\";\nimport Project from \"../components/Project\";\nimport \"./Work.scss\";\n\nlet projects;\n\nclass Work extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projects: projects || [],\n      currentProject: 0,\n    };\n\n    this.prevProject = this.prevProject.bind(this);\n    this.nextProject = this.nextProject.bind(this);\n  }\n\n  componentDidMount() {\n    if (projects !== undefined) return;\n    client\n      .getEntries({\n        content_type: \"project\",\n      })\n      .then((entries) => {\n        entries.items.sort((a, b) => a.fields.order - b.fields.order);\n        this.setState({\n          projects: entries.items,\n        });\n\n        projects = entries.items;\n      });\n  }\n\n  prevProject() {\n    let currentProject = this.state.currentProject;\n    let newProject = Math.max(currentProject - 1, 0);\n\n    this.setState({\n      currentProject: newProject,\n    });\n  }\n\n  nextProject() {\n    let currentProject = this.state.currentProject;\n    let newProject = Math.min(\n      currentProject + 1,\n      this.state.projects.length - 1\n    );\n\n    this.setState({\n      currentProject: newProject,\n    });\n  }\n\n  render() {\n    let { projects, currentProject } = this.state;\n\n    let desktop = (\n      <Fragment>\n        {currentProject > 0 ? (\n          <div className=\"Work__Button Work__Prev\" onClick={this.prevProject}>\n            Previous\n          </div>\n        ) : null}\n\n        {projects.length > 1 ? (\n          <Project project={projects[currentProject]} />\n        ) : null}\n        {currentProject < projects.length - 1 ? (\n          <div className=\"Work__Button Work__Next\" onClick={this.nextProject}>\n            Next\n          </div>\n        ) : null}\n      </Fragment>\n    );\n\n    let mobile = (\n      <Fragment>\n        {projects.map((proj, i) => {\n          return <Project project={proj} key={i} />;\n        })}\n      </Fragment>\n    );\n\n    return <section className=\"Work\">{mobile}</section>;\n  }\n}\n\nexport default Work;\n","import React, { Component } from \"react\";\nimport client from \"../client\";\nimport \"./Contact.scss\";\n\nlet fields;\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      fields: fields || [],\n    };\n  }\n\n  componentDidMount() {\n    if (fields !== undefined) return;\n\n    console.log(\"fetching\");\n\n    client\n      .getEntries({\n        content_type: \"contact\",\n      })\n      .then((entries) => {\n        this.setState({\n          fields: entries.items,\n        });\n\n        fields = entries.items;\n      });\n  }\n\n  render() {\n    let { fields } = this.state;\n    console.log(fields);\n    return (\n      <div className=\"Contact\">\n        <div className=\"Contact__Column Contact__Label\">\n          <span>Contact</span>\n        </div>\n        <address className=\"Contact__Column Contact__Info\">\n          <ul>\n            {fields.map((item) => {\n              return (\n                <li key={item.fields.type}>\n                  <a href={item.fields.url}>{item.fields.display}</a>\n                </li>\n              );\n            })}\n          </ul>\n        </address>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Copyright from \"../components/Copyright\";\nimport Contact from \"../components/Contact\";\nimport client from \"../client\";\nimport \"./Info.scss\";\n\nlet content;\n\nclass Info extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: content || null,\n    };\n  }\n\n  componentDidMount() {\n    if (content !== undefined) return;\n\n    client.getEntry(\"79QIeJG8JfPFbjEm79utjt\").then((entry) => {\n      this.setState({\n        content: entry.fields.content.content,\n      });\n\n      content = entry.fields.content.content;\n    });\n  }\n\n  render() {\n    let { content } = this.state;\n    return (\n      <section className=\"About\">\n        <div className=\"About__Text\">\n          {content &&\n            content.map((e, i) => {\n              return (\n                <p key={i} className=\"About__Paragraph\">\n                  {e.content[0].value}\n                </p>\n              );\n            })}\n        </div>\n\n        <Contact />\n      </section>\n    );\n  }\n}\n\nexport default Info;\n","import React, { Component } from \"react\";\nimport client from \"../client\";\nimport \"./Feed.scss\";\n\nlet items;\n\nclass Feed extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      items: items || [],\n    };\n  }\n\n  componentDidMount() {\n    client\n      .getEntries({\n        content_type: \"feedImage\",\n      })\n      .then((res) => {\n        this.setState({\n          items: res.items,\n        });\n        items = res.items;\n      });\n  }\n\n  render() {\n    return (\n      <div className=\"Feed\">\n        {this.state.items.map((item) => (\n          <div key={item.sys.id} className=\"Feed__Image\">\n            {item.fields.image.fields.file.contentType === \"video/mp4\" ? (\n              <video controls>\n                <source\n                  src={item.fields.image.fields.file.url}\n                  type=\"video/mp4\"\n                />\n              </video>\n            ) : (\n              <img loading=\"lazy\" src={`https:${item.fields.image.fields.file.url}`} />\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Feed;\n","import { createClient } from \"contentful\";\n\nconst client = createClient({\n  space: \"hnbfrxxvl2gq\",\n  accessToken: \"z7wi5Nu3oN-SznSjlUeuZiVHPbFTtXoGsPe2ZXy2j4U\",\n});\n\nexport default client;\n","import React, { Component } from \"react\";\nimport \"./Project.scss\";\n\nclass Project extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let { fields } = this.props.project;\n    let urlParts = fields.vimeoUrl.split(\"/\");\n    let vimeoId = urlParts[urlParts.length - 1];\n    return (\n      <div className=\"Project\">\n        <h1 className=\"Project__Title\">{fields.title}</h1>\n        <div class=\"Project__Video\">\n          <iframe\n            src={`https://player.vimeo.com/video/${vimeoId}?title=0&byline=0&portrait=0`}\n            width=\"640\"\n            height=\"360\"\n            frameborder=\"0\"\n            allow=\"autoplay; fullscreen\"\n            allowfullscreen\n          ></iframe>\n        </div>\n        <div class=\"Project__Credits\">\n          <div class=\"Project__Credits__Column Project__Credits__Label\">\n            <span>Credits</span>\n          </div>\n          <div class=\"Project__Credits__Column Project__Credits__List\">\n            <ul>\n              {fields.credits.map((credit) => {\n                return (\n                  <li key={credit.sys.id}>\n                    {credit.fields.roll} - {credit.fields.firstName}{\" \"}\n                    {credit.fields.lastName}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Project;\n","import React from \"react\";\nimport \"./Copyright.scss\";\n\nconst Copyright = () => (\n  <small className=\"Copyright\">© Smog Cinema Group</small>\n);\n\nexport default Copyright;\n","import React, { Component } from \"react\";\nimport \"./Home.scss\";\nimport videoSrc from \"../images/SMOG_LOOP_16-9.mp4\";\n\nclass Home extends Component {\n  render() {\n    return (\n      <div className=\"Home\">\n        <div className=\"Home__Video--Wrap\">\n          <video\n            className=\"Home__Video\"\n            autoPlay\n            playsInline\n            muted\n            loop\n            defaultMuted\n            preload=\"auto\"\n            id=\"myVideo\"\n          >\n            <source src={videoSrc} type=\"video/mp4\" />\n          </video>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport logoSrc from \"../images/smog-logo-cropped.png\";\nimport \"./Logo.scss\";\n\nclass Logo extends Component {\n  render() {\n    let { logoClass } = this.props;\n    let fill = this.props.fill || \"#fff\";\n\n    return (\n        <Link to=\"/\">\n          <div class=\"Logo\" style={{backgroundImage: `url(${logoSrc})`}} />\n        </Link>\n    );\n  }\n}\n\nexport default Logo;\n","import React, { Component } from \"react\";\nimport { withRouter, Link } from \"react-router-dom\";\nimport Logo from \"./Logo\";\nimport \"./Nav.scss\";\n\nconst LOGO_COLORS = {\n  GREEN: \"#697841\",\n  PURPLE: \"#6c00ff\",\n  GOLD: \"#ffb600\",\n  RED: \"#ca2b0a\",\n};\n\nclass Nav extends Component {\n  render() {\n    let pages = [\n      { name: \"Work\", url: \"/work\" },\n      { name: \"Feed\", url: \"/feed\" },\n      { name: \"Info\", url: \"/info\" },\n    ];\n\n    let path = this.props.location.pathname;\n\n    let logoColor = LOGO_COLORS.GOLD;\n\n    if (path.includes(\"/work\")) {\n      logoColor = LOGO_COLORS.PURPLE;\n    } else if (path.includes(\"/feed\")) {\n      logoColor = LOGO_COLORS.RED;\n    } else if (path.includes(\"/info\")) {\n      logoColor = LOGO_COLORS.GREEN;\n    }\n\n    return (\n      <nav className={`Nav ${path === \"/\" && \"Nav--Home\"}`}>\n        <Logo logoClass=\"Nav__Logo\" fill={logoColor} />\n        <ul className=\"Nav__Links\">\n          {pages.map((page) => (\n            <li key={page.name} className=\"Nav__Links__Link\">\n              <Link\n                className={path.includes(page.url) && \"active\"}\n                to={page.url}\n              >\n                {page.name}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default withRouter(Nav);\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport { HashRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Work from \"./pages/Work\";\nimport Info from \"./pages/Info\";\nimport Feed from \"./pages/Feed\";\nimport Home from \"./pages/Home\";\nimport Nav from \"./components/Nav\";\nimport Copyright from \"./components/Copyright\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename=\"/\">\n        <Nav></Nav>\n        <Switch>\n          <Route path=\"/work\">\n            <Work />\n          </Route>\n          <Route path=\"/info\">\n            <Info />\n          </Route>\n          <Route path=\"/feed\">\n            <Feed />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>\n      <Copyright />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/SMOG_LOOP_16-9.dbb54fec.mp4\";","module.exports = __webpack_public_path__ + \"static/media/smog-logo-cropped.c232eca0.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}